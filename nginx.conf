# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
            proxy_pass http://123.207.144.58:9098;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

    server {

        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  lite.lianlianchains.com;
        root         /usr/share/nginx/html;

        ssl_certificate "/etc/nginx/Cert/1_store.lianlianchains.com_bundle.crt";
        ssl_certificate_key "/etc/nginx/Cert/2_store.lianlianchains.com.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;


        location ^~ /chain/ {
            proxy_pass http://127.0.0.1:7050;
        }

        location ^~ /network/ {
            proxy_pass http://127.0.0.1:7050;
        }

        location ^~ /gw/ {
            proxy_pass http://127.0.0.1:8078;
        } 

        location ^~ /app/ {
            proxy_pass http://127.0.0.1:8088;
        }         

        location ^~ /sms/ {
            proxy_pass http://127.0.0.1:9888;
        } 

        location ^~ /qrcode/ {
            proxy_pass http://127.0.0.1:9888;
        }               

        location ^~ /wx/ {
            proxy_pass http://127.0.0.1:9888;
        }       

        location ^~ /wxpay/ {
            proxy_pass http://127.0.0.1:9888;
        } 

        location ^~ /CVS/ {
            proxy_pass http://127.0.0.1:9888;
        }  

        location ^~ /ehr/ {
            proxy_pass http://127.0.0.1:8089;
        }          
        
        location ^~ /frt/ {
            proxy_pass http://127.0.0.1:8188;
        }

        location ^~ /smk/ {
            proxy_pass http://127.0.0.1:8288;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        location ~ .*\.(gif|jpg|jpeg|png)$ {
            root /usr/share/nginx/html/images;
            expires 30d;
        }

        # wss mapping

        location ^~ /websocket {
           proxy_pass http://127.0.0.1:9888;
           proxy_redirect off;

           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_set_header X-NginX-Proxy true;

           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
        }

    }


}
