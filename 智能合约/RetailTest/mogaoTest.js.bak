/**
 * Copyright 2017 IBM All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an 'AS IS' BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
'use strict';

const loulan = require('./loulan')


const common = require('./lib/common');


var logger = common.createLog("mogaotest")
logger.setLogLevel(logger.logLevel.DEBUG)



process.on('exit', function (){
  logger.info(" ****  mogaotest exit ****");
  //fs.closeSync(wFd);
  user.onExit();
});


loulan.SetLogger(logger)
loulan.UseDefaultRoute('mogaotest')


loulan.SetRequireParams(loulan.routeHandles.All,    {channame: 'mogaotest-channel', org: 'org1', ccname: 'mogaotest_cc'})

loulan.SetRequireParams(loulan.routeHandles.ChaincodeInstall, {ccpath: 'mogao'})  //目录和mogao保持一致

loulan.SetRequireParams(loulan.routeHandles.ChaincodeInstantiate, {addtm: '1'})

loulan.SetRequireParams(loulan.routeHandles.ChaincodeUpgrade, {addtm: '1'})

loulan.SetRequireParams(loulan.routeHandles.Register,   {autoadd: '1', accequsr: '1', peers: 'peer1,peer2'})

loulan.SetRequireParams(loulan.routeHandles.Query,      {autoadd: '1', accequsr: '1', peer: 'peer1'})

loulan.SetRequireParams(loulan.routeHandles.Invoke,     {autoadd: '1', accequsr: '1', peers: 'peer1,peer2'})



loulan.Start()
